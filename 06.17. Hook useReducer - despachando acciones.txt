----------------------------------------------------------------------------------------
CartApp.jsx
----------------------------------------------------------------------------------------
import { useReducer, useState } from "react"
import { CartView } from "./components/CartView"
import { CatalogView } from "./components/CatalogView"
import { itemsReducer } from "./reducer/itemsReducer";

// Valores iniciales para el estado cartItems, se guardan en sessionStorage (si hay) o es un arreglo vacio
const initialCartItems = JSON.parse(sessionStorage.getItem('cart')) || [];

// Funcion principal del componente CartApp
export const CartApp = () => {

    // Estado para los productos del carrito con una logica personalizada definida en itemsReducer
    const [cartItems, dispatch] = useReducer(itemsReducer, initialCartItems);

    // Función para añadir un producto al carrito
    const handlerAddProductCart = (product) => {

        // Validar si el item con el id... ya existe en el carrito
        const hasItem = cartItems.find((i) => i.product.id === product.id);

        if (hasItem) {

            // Despachar el objeto product con la función UpdateQuantityProductCart
            dispatch(
                {
                    type: "UpdateQuantityProductCart",
                    payload: product,
                }
            )

        } else {

            // Despachar el objeto product con la función AddProductCart
            dispatch(
                {
                    type: "AddProductCart",
                    payload: product,
                }
            )

        }

    }

    // Funcion para eliminar un producto del carrito
    const handlerDeleteProductCart = (id) => {

        // Despachar el id con la función DeleteProductCart
        dispatch(
            {
                type: "DeleteProductCart",
                payload: id,
            }
        )
    }

    return (
        <>
            <div className="container my-4">
                <h3>Cart App</h3>
                <CatalogView handler={handlerAddProductCart} />

                {cartItems?.length <= 0 || (
                    <div className="my-4 w-50">
                        <CartView items={cartItems} handlerDelete={handlerDeleteProductCart} />
                    </div>
                )}
            </div>
        </>
    )
}
